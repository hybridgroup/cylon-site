---
hero: true
social: true
catcher: true
menu_fixed: true
parallaxTop: true

title: Cylon.js - JavaScript framework for robotics, physical computing, and the Internet of Things using Node.js
author: The Hybrid Group
description: Cylon.js is a JavaScript framework for robotics, physical computing, and the Internet of Things using Node.js. It provides a simple, yet powerful way to create JavaScript robots that incorporate multiple, different hardware devices at the same time.
layout: home

hero_title: "JavaScript Robotics, By Your Command"

hero_subtitle: "Next generation robotics framework with support for <a href='#platforms'>31 different platforms</a>"


catcher_phrase: Ready to build the next big thing with JavaScript?
getting_started_button: "<a href='/documentation/getting-started' class='call-to-action'> Get Started</a>"

---

-content_for :black_top_title do
  :markdown
    ## Meet The Code

    Cylon.js makes it incredibly simple and fun to command robots.

    All you need to get started is the `cylon` NPM module:

        $ npm install cylon

    Then install modules for whichever hardware support you want to use from your robot.

:markdown
  ## Examples

  ### Arduino

  In this example below, we will use Cylon.js with an Arduino controlled via the Firmata protocol. First, install the `cylon-firmata` module:

      $ npm install cylon-firmata

  Now, this example code will connect to an Arduino, and every second turn the LED either on, or off.

      :::javascript
      var Cylon = require("cylon");

      // Initialize the robot
      var robot = Cylon.robot({
        // Change the port to the correct port for your Arduino.
        connection: { name: 'arduino', adaptor: 'firmata', port: '/deviceev/ttyACM0' },
        device: { name: 'led', driver: 'led', pin: 13 },

        work: function(my) {
          // we do our thing here
          every((1).second(), function() { my.led.toggle(); });
        }
      });

      // start working
      robot.start();


  ### More Examples

  We've got [lots more examples here](/documentation/examples) to help you get started.

%h2#platforms Platform Support

%div
  %p Cylon.js has a extensible system for connecting to hardware devices. The following robotics and physical computing systems, and software platforms, are currently supported:

  %ul.platform-list
    - data.platforms.each do |name, info|
      %li.platform
        %a{:href => "/documentation/platforms/#{info.slug}"}
          %p.title= name
          %img{src: "/images/devices/#{info.slug}.jpg", style: "width: 90%"}
  .clear

%p Support for many devices that use General Purpose Input/Output (GPIO) have a shared set of drivers provided using the cylon-gpio module:

%ul.platform-list
  - data.drivers.GPIO.each do |name, url|
    %li.platform
      %a{:href => "/documentation/drivers/#{url}"}
        %p.title= name
        %img{src: "/images/devices/#{url}.jpg", style: "width: 90%"}
  .clear

%p Support for devices that use Inter-Integrated Circuit (I2C) have a shared set of drivers provded using the cylon-i2c module:

%ul.platform-list
  - data.drivers.I2C.each do |name, url|
    %li.platform
      %a{:href => "/documentation/drivers/#{url}"}
        %p.title= name
        %img{src: "/images/devices/#{url}.jpg", style: "width: 90%"}
  .clear

:markdown
  ## Browser & Mobile Support

  Cylon.js can be run directly in-browser, using the `browserify` NPM module. You can also run it from withing a Chrome connected app, or a PhoneGap mobile app.

  For more info on browser support, and for help with different configurations, you can find more info [in our docs](/documentation/guides/browser-support).

  ## API

  Cylon has a built-in API that you can interact with your robots.

  All you need to start up the API server is to place the following command in your `.js` file after you require Cylon.

      :::javascript
      var Cylon = require("cylon");
      Cylon.api();

  Then visit `https://localhost:3000/` and you are ready to control your robots from a web browser!
  <img src="/images/screenshots/robeaux.png" style="margin-top: 15px; width: 100%">

  You can check out more information on the Cylon API in the docs [here](/documentation/guides/api).

  ## CLI

  <script src="https://asciinema.org/a/10306.js" id="asciicast-10306" data-autoplay="1" data-loop="true"></script>

  Cylon uses the [Gort][] toolkit, so you can access important features from the command line.
  You can scan, connect to devices, update firmware, and more!
  We call it "RobotOps", a.k.a. "DevOps for Robotics".

  Cylon also has it's own CLI tool to generate new modules, robots, and drivers.

  You can check out the Cylon CLI docs [here][cli-docs].

  [Gort]: http://gort.io
  [cli-docs]: /documentation/guides/cli

  ## Be Part of the Robot Evolution

  If you'd like to find out more, you can check out our code on [GitHub](https://github.com/hybridgroup/cylon).

  Want updates on what we're working on, follow us on [Twitter](https://twitter.com/CylonJS), or check out our [Trello board](https://trello.com/b/l1aEuqMU/cylon).

  If you want to talk to us, we can be found hanging out on IRC, `#cylon` on `irc.freenode.net`
