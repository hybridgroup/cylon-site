---
title: Cylon.js - Analog Sensor Driver
author: The Hybrid Group
page_title: Drivers - Analog Sensor Driver
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: Analog Sensor
page_subtitle_docs: Driver
layout: documentation
page_title_show: true
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true
---
%section.intro
  = image_tag "/images/devices/analog-sensor.jpg", class: "display"
  .info-intro
    :markdown
      Makes it possible to interact with analog inputs on your device and obtain values that represent the analog input send by the sensors.
      The value received from an analog input read from the sensor goes from 0 to 1027.

      For more information click [here](http://en.wikipedia.org/wiki/Sensor).

  .clear

%section#HowToConnect
  :markdown
    ## How To Connect

        :::javascript
        Cylon.robot({
          connection: {
            name: 'arduino',
            adaptor: 'firmata',
            port: '/dev/ttyACM0'
          },

          device: {
            name: 'sensor',
            driver: 'analogSensor',
            pin: 0,
            lowerLimit: 100,
            upperLimit: 900
          }
        });

%section#HowToUse
  :markdown
    ## How To Use

    This example detects lower and upper limits on a photoresistor sensor.

        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: {
            name: 'arduino',
            adaptor: 'firmata',
            port: '/dev/ttyACM0'
          },

          device: {
            name: 'sensor',
            driver: 'analogSensor',
            pin: 0,
            lowerLimit: 100,
            upperLimit: 900
          },

          work: function(my) {
            var analogValue = 0;

            every((1).second(), function() {
              analogValue = my.sensor.analogRead();
              console.log('Analog value => ', analogValue);
            });

            my.sensor.on('lowerLimit', function(val) {
              console.log("Lower limit reached!");
              console.log('Analog value => ', val);
            });

            my.sensor.on('upperLimit', function(val) {
              console.log("Upper limit reached!");
              console.log('Analog value => ', val);
            });
          }
        }).start();

%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_analog_sensor"
  .commands-api#Events
    = partial "/documentation/drivers/partials/gpio/events_analog_sensor"

%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p
  .image-circuit
    %img{:src => "/documentation/drivers/breadboards/gpio/analog_sensor_bb.png", :alt => ""}/
  .clear

%section.compatibility.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "/partials/platforms_for_driver", locals: { driver: "Analog Sensor" }
