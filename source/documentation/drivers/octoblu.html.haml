---
title: Cylon.js - Octoblu Driver
author: The Hybrid Group
page_title: Drivers - Octoblu
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: Octoblu
page_subtitle_docs: Driver
layout: documentation
page_title_show: true
subnav_driver: true
active_menu_docs: true
subnavjs: true
---
%section.intro
  = image_tag "/images/devices/octoblu.jpg", class: "display"
  .info-intro
    :markdown
      Open Communications Network and API for the internet of things.

      For more info about the Octoblu platform click [here](https://www.octoblu.com).
  .clear

%section#HowToConnect
  :markdown
    ## How To Connect

        :::javascript
        Cylon.robot({
          connections: {
            arduino: { adaptor: 'firmata', port: '/dev/ttyACM0' },
            octoblu: { adaptor: 'octoblu', uuid: "742401f1-87a4-11e3-834d-670dadc0ddbf", token: "xjq9h3yzhemf5hfrme8y08fh0sm50zfr" }
          },

          devices: {
            led: { driver: 'led', pin: 13, connection: 'arduino' }
          },
        });


%section#HowToUse
  :markdown
    ## How To Use

    This small program use the Skynet with the LED.

        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connections: {
            arduino: { adaptor: 'firmata', port: '/dev/ttyACM0' },
            octoblu: { adaptor: 'octoblu', uuid: "742401f1-87a4-11e3-834d-670dadc0ddbf", token: "xjq9h3yzhemf5hfrme8y08fh0sm50zfr" }
          },

          devices: {
            led: { driver: 'led', pin: 13, connection: 'arduino' }
          },


          work: function(my) {
            my.octoblu.on('message', function(data) {
              if(data.message.red == 'on') {
                my.led.turnOn()
              }
              else if(data.message.red == 'off') {
                my.led.turnOff()
              }
            });
          }
        }).start();

%section.public-methods
  .commands-api#Commands
    %h1 Commands
    = partial "/documentation/import/cylon-octoblu/adaptor-commands"

  .commands-api#Events
    %h1 Commands
    = partial "/documentation/import/cylon-octoblu/adaptor-events"

%section.compatibility.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "/partials/platforms_for_driver", locals: { driver: "Octoblu" }
