---
title: Cylon.js - ARDrone Navigation Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: ARDrone Navigation
page_subtitle_docs: Driver
layout: documentation
page_title_show: true
subnav_driver: true
active_menu_docs: true
subnavjs: true

ardrone_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#ardrone li:nth-child(2)").addClass("active-link");

%section.intro
  =image_tag "/images/devices/ardrone-navigation.jpg", class: "display"
  .info-intro
    :markdown

      Allows user to receive in-flight navgation data from an ARDrone.
      Navigation data includes such information as the ARDrone's current pitch and yaw, along with many other data elements.

      For more information click [here](http://ardrone2.parrot.com/).

  .clear

%section.how-to#HowToConnect
  :markdown
    ## How To Connect

    Communication with the ARDrone's navigation data interface takes place using a WiFi connection.
    The ARDrone is a WiFi access point, so it normally can be the only device you connect to, without some additional effort to reconfigure the drone itself to put it into infrastructure mode.

        :::javascript
        Cylon.robot({
          connection: {
            name: 'ardrone',
            adaptor: 'ardrone',
            port: '192.168.1.1'
          },

          devices: [
            { name: 'drone', driver: 'ardrone' },
            { name: 'nav', driver: 'ardroneNav' }
          ]
        });


%section.how-to#HowToUse
  :markdown
    ## How To Use

    Once the connection and the devices have been setup (as explained above) you can receive navigation events on them as follows:

        :::javascript
        var Cylon = require('cylon')

        Cylon.robot({
          connection: {
            name: 'ardrone',
            adaptor: 'ardrone',
            port: '192.168.1.1'
          },

          devices: [
            { name: 'drone', driver: 'ardrone' },
            { name: 'nav', driver: 'ardroneNav' }
          ]

          work: function(my) {
            my.drone.config('general:navdata_demo', 'TRUE');

            my.nav.on('update', function(data) {
              console.log(data);
            }
          }
        }).start();


%section.public-methods
  .commands-api#Commands
    %h1 Commands
    %p no commands
  .commands-api#Events
    = partial "/documentation/drivers/partials/ardrone/events_nav"

%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "documentation/partials/devices_platforms"
