---
title: Cylon.js - Pinoccio Power Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: Pinoccio Power
page_subtitle_docs: Driver
layout: documentation
page_title_show: true
subnav_driver: true
active_menu_docs: true
subnavjs: true

pinoccio_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#pinoccio li:nth-child(2)").addClass("active-link");

%section.intro
  =image_tag "/images/devices/pinoccio_power.jpg", class: "display"
  .info-intro
    :markdown
      For more information click [here](https://pinocc.io/).

  .clear

%section.how-to#HowToConnect
  :markdown
    ## How To Connect

    Install the module with: `npm install cylon-pinoccio`

        :::javascript
        Cylon.robot({
          connection: {
            name: 'pinoccio',
            adaptor: 'pinoccio',
            token: 'XXX',
            troop: '1',
            scout: '1'
          },

          device: { name: 'power', driver: 'pinoccio-power' },
        });


%section.how-to#HowToUse
  :markdown
    ## How To Use

        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: {
            name: 'pinoccio',
            adaptor: 'pinoccio',
            token: 'XXX',
            troop: '1',
            scout: '1'
          },

          device: { name: 'power', driver: 'pinoccio-power' },

          work: function(my) {
            every((3).seconds(), function() {
              my.power.voltage(function(err, data){
                console.log(err);
                console.log(data);
              });
            });
          }
        }).start();

%section.public-methods
  .commands-api#Commands
    :markdown
      # Commands

      ## isCharging(cb)

      Returns a value if the drivers is charging

      - **cb** - The value for which to return data

      ##### Returns

      `nil`

      ## percent(cb)

      Returns the percent

      - **cb** - The value for which to return data

      ##### Returns

      `nil`

      ## voltage(cb)

      Returns the voltage

      - **cb** - The value for which to return data

      ##### Returns

      `nil`

      ## enableVcc()

      Enables the VCC

      ## disableVcc()

      Disables the VCC

      ## report(cb)

      Returns a report of the driver

      - **cb** - The value for which to return data

      ##### Returns

      `nil`

  .commands-api#Events
    :markdown
      # Events
      no events

%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "documentation/partials/devices_platforms"
