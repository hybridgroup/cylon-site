---
title: Nest with Cylon.js
author: The Hybrid Group
page_title: Platforms
page_subtitle: Cylon has an extensible system for connecting to hardware devices.
page_title_docs: Nest
page_subtitle_docs: "<a href='https://github.com/hybridgroup/cylon-nest' target='_blank' class='repository'>Repository</a>| <a class+'issues' href='https://github.com/hybridgroup/cylon-nest/issues' target='_blank'>Issues</a>"
layout: documentation
page_title_show: true
subnav_platform: true
active_menu_platforms: true
subnavjs: true

nest_thermostat_driver: true
nest_home_driver: true
---
-content_for :js_accordion do
  :javascript
    $("#platform-panel").addClass("active-panel");
    $("#platform-panel ul li:nth-child(13)").addClass("active-link");

%section.intro
  = image_tag "/images/devices/nest.jpg", class: "display"
  .info-intro
    = partial '/hybridpages/partials/widgets/repo_issues'
    :markdown
      Most people leave the house at one temperature and forget to change it.
      So the Nest Learning Thermostat learns your schedule, programs itself and can be controlled from your phone.
      Teach it well and the Nest Thermostat can lower your heating and cooling bills up to 20%.

      For more info about the Nest platform click [here](https://nest.com/thermostat/life-with-nest-thermostat/).
  .clear

%section.how-to#HowToInstall
  :markdown
    ## How To Install

        $ npm install cylon-nest

%section.how-to#HowToUse
  :markdown
    ## How To Use

        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: {
            name: 'nest',
            adaptor: 'nest',
            accessToken: 'XXX',
          },

          device: {
            name: 'thermostat',
            driver: 'nest-thermostat',
            deviceId: 'XXX'
          },

          work: function(my) {
            // Listen to the status event to obtain all thermostat
            // related data in a single object.
            my.thermostat.on('status', function(data) {
              console.log('The Thermostat at a glance--->', data);
            });

            every((60).seconds(), function(){
              console.log('NEST ambient temp C:', my.thermostat.ambientTemperatureC());
              console.log('NEST ambient temp F:', my.thermostat.ambientTemperatureF());
            });
          }
        }).start();


%section.how-to#HowToConnect
  :markdown
    ## How To Connect

    First, you need to create a developer account with [Nest Labs](https://developer.nest.com/).

    Once you've created an account, you need to create a client app.
    The Developer Portal UI will guide you through it.
    You don't need an OAuth redirect URL, since we're going to be using the generated PIN to get an access token.

    Next step is to obtain the access token for your Nest account in order to authenticate, as instructed [here](https://developer.nest.com/documentation/how-to-auth).

    Once you have done this, you should be able to use the `access_token` you obtained, with the generate access token url listed in the clients section of the Nest developer portal, to make API calls from Cylon.js

%section.drivers#Drivers
  :markdown
    ## Drivers

    Available drivers for the Nest platform are listed below.

  .hardware
    .devices
      // TODO: Update drivers list at the top of the page.
      = partial "documentation/partials/devices_nest_drivers"
