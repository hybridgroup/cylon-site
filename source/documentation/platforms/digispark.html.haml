---
title: Digispark with Cylon.js
author: The Hybrid Group
page_title: Platforms
page_subtitle: Cylon has an extensible system for connecting to hardware devices.
page_title_docs: Digispark
page_subtitle_docs: "<a href='https://github.com/hybridgroup/cylon-digispark' class='repository'>Repository</a>| <a class+'issues' href='https://github.com/hybridgroup/cylon-digispark/issues'>Issues</a>"
layout: documentation
page_title_show: true
subnav_platform: true
active_menu_platforms: true
subnavjs: true

led_driver: true
servo_driver: true
blinkm_driver: true
makey_driver: true
mpl115a2_driver: true
lcd_driver: true
direct_pin_driver: true
---
-content_for :js_accordion do
  :javascript
    $("#platform-panel").addClass("active-panel");
    $("#platform-panel ul li:nth-child(7)").addClass("active-link");

%section.intro
  = image_tag "/images/devices/digispark.jpg", class: "display"
  .info-intro
    = partial '/hybridpages/partials/widgets/repo_issues'
    :markdown
      The Digispark is an Attiny85 based microcontroller development board similar to the Arduino line, only cheaper, smaller, and a bit less powerful.
      With a whole host of shields to extend its functionality and the ability to use the familiar Arduino IDE, the Digispark is a great way to jump into electronics, or perfect for when an Arduino is too big or too much.

      For more info about the Digispark platform click [here](http://digistump.com/category/1).
  .clear

%section.how-to#HowToInstall
  :markdown
    ## How To Install

    Installing the cylon-digispark requires the `libusb` package already be installed.

    ### OSX

    To install libusb on OSX using Homebrew:

        $ brew install libusb

    ### Ubuntu

    To install libusb on linux:

        $ sudo apt-get install libusb-dev

    Now you can install the module with: `npm install cylon-digispark`

    If you're experiencing the `AttributeError: 'module' object has no attribute 'script_main'` build issue, then please refer to this [comment](https://github.com/TooTallNate/node-gyp/issues/363#issuecomment-33212812)

%section.how-to#HowToUse
  :markdown
    ## How To Use

    This small program lets you toggle an LED on and off.

        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'digispark', adaptor: 'digispark' },
          device: { name: 'led', driver: 'led', pin: 2 },

          work: function(my) {
            every((1).seconds(), function() { my.led.toggle() });
          }
        }).start();


%section.how-to#HowToConnect
  :markdown
    ## How To Connect

    To connect to the Digispark, we first need to upload the [Littlewire protocol](http://littlewire.cc) to the Digispark.

    **IMPORTANT:** The ports on the 2012 Macbook Pros will cause issues due to their USB controllers.
    Currently, the best workaround is to use a cheap non-USB3 USB hub.

    **Do not** plug your Digispark into a USB port until prompted.

    First, install the cylon-digispark module:

        $ npm install cylon-digispark

    Next, run the following [Gort](http://gort.io) command to upload Littlewire to the Digispark.
    Plug the Digispark in when prompted.

        $ gort digispark upload

    Once this is done and your Digispark is connected, run `gort scan usb` to verify your connection info.
    Use the `ID` info returned to find the `product` and `vendor` IDs required to connect to the Digispark from Cylon.

    If you're on Linux, the `gort digispark upload` command will have installed some new udev rules to `/etc/udev/rules.d/49-micronucleus.rules`.

%section.drivers#Drivers
  :markdown
    ## Drivers

    Cylon.JS' communication with the Digispark relies on using the Littlewire protocol.
    This allows for interaction with a wide range of I/O hardware devices and interfaces, using a set of previously-defined and easy-to-use drivers.

    Available drivers for the Digispark platform are listed below.

  .hardware
    // TODO: Update drivers list at the top of the page.
    %h2 GPIO Drivers
    .devices
      = partial "documentation/partials/devices_gpio_drivers"
    %h2 i2c Drivers
    .devices
      = partial "documentation/partials/devices_i2c_drivers"
