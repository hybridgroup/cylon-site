---
title: Skynet with Cylon.js
author: The Hybrid Group
page_title: Platforms - Skynet
page_subtitle: Cylon has an extensible system for connecting to hardware devices.
page_title_docs: Skynet
page_subtitle_docs: "<a href='https://github.com/hybridgroup/cylon-skynet' class='repository'>Repository</a>| <a class='issues' href='https://github.com/hybridgroup/cylon-skynet/issues'>Issues</a>"
layout: documentation
page_title_show: true
subnav_nodriver_platform: true
active_menu_platforms: true
subnavjs: true
---
%section.intro
  = image_tag "/images/devices/skynet.jpg", class: "display"
  .info-intro
    %h4.subtitle= current_page.data.page_subtitle_docs
    :markdown
      Open Communications Network and API for the internet of things.

      For more info about the Skynet platform click [here](http://skynet.im/).
  .clear

%section#HowToInstall
  :markdown
    ## How To Install

    Install the module with:

        $ npm install cylon-skynet

%section#HowToUse
  :markdown
    ## How To Use

        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connections: [
            { name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0' },
            { name: 'skynet', adaptor: 'skynet', uuid: "742401f1-87a4-11e3-834d-670dadc0ddbf", token: "xjq9h3yzhemf5hfrme8y08fh0sm50zfr" }
          ],

          device: { name: 'led', driver: 'led', pin: 13, connection: 'arduino' },

          work: function(my) {
            my.skynet.on('message', function(data) {
              if(data.message.red == 'on') {
                my.led.turnOn()
              } else if(data.message.red == 'off') {
                my.led.turnOff()
              }
            });
          }
        }).start();

%section#HowToConnect
  :markdown
    ## How To Connect

    First, you need to register a device on the Skynet network. You can do this with a curl command similar to this one:

        $ curl -X POST -d "name=arduino&led=off" http://skynet.im/devices

    This will return the new registration information for the device, most importantly the `uuid` and `token`:

        :::bash
        => {"name":"arduino","led":"off","uuid":"8220cff0-2939-11e3-88cd-0b8e5fdfd7d4","timestamp":1380481272431,"token":"1yw0nfc54okcsor2tfqqsuvnrcf2yb9","online":false,"_id":"524878f8cc12f0877f000003"}

%section.drivers#Drivers
  :markdown
    ## Drivers

    Available drivers for the Skynet platform are listed below.

  .hardware
    .devices
      = partial "/partials/devices_for_platform", locals: { platform: "Skynet" }
