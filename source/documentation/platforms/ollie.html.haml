---
title: Ollie with Cylon.js
author: The Hybrid Group
page_title: Platforms - Ollie
page_subtitle: Cylon has an extensible system for connecting to hardware devices.
page_title_docs: Ollie
page_subtitle_docs: "<a href='https://github.com/hybridgroup/cylon-ollie' target='_blank' class='repository'>Repository</a>| <a class+'issues' href='https://github.com/hybridgroup/cylon-ollie/issues' target='_blank' >Issues</a>"
layout: documentation
page_title_show: true
subnav_platform: true
active_menu_platforms: true
subnavjs: true
---
%section.intro
  =image_tag "/images/devices/ollie.jpg", class: "display"
  .info-intro
    %h4.subtitle= current_page.data.page_subtitle_docs
    :markdown

      Ollie is engineered for speed and complete control. Thanks to its tubular design, the Ollie is an awesomely agile robot. The Ollie is also programmable to do tricks, allowing you to make it Spin, drift, and flip.

      To learn more about the Ollie, click [here](http://www.gosphero.com/ollie).
  .clear

%section#HowToInstall
  :markdown
    ## How To Install

        $ npm install cylon-ollie

%section#HowToUse
  :markdown
    ## How To Use

        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'bluetooth', adaptor: 'central', uuid: 'cc360e85785e', module: 'cylon-ble'},
          device: {name: 'ollie', driver: 'ollie'},

          work: function(my) {
            my.ollie.wake(function(err, data){
              console.log("wake");
              after(200, function() {
                my.ollie.setRGB(0x00FFFF);
              });
              after(500, function() {
                my.ollie.setRGB(0xFF0000);

                my.ollie.roll(60, 0, 1);
                after(1000, function(){
                  my.ollie.roll(60, 90, 1);

                  after(1000, function(){
                    my.ollie.stop();
                  });
                });
              });
            });
          }

%section#HowToConnect
  :markdown
    ## How To Connect

    Before you will be able to program the Ollie, you will need to put it into "developer mode" using a compatible mobile app. If you do not have an app that can do this, you will not be able to use cylon-ollie.

    You then need to determine the `uuid` of your Ollie. One way to do this, is to use the `cylon-ble-scan` command line utility installed as part of [cylon-ble](https://github.com/hybridgroup/cylon-ble).

    Once you know your `uuid` substititute it into your code, and away you go!

%section.drivers#Drivers
  :markdown
    ## Drivers

    There is only one driver for the Ollie.
    Click on the image below:

  .hardware
    .devices
      = partial "/partials/devices_for_platform", locals: { platform: "Ollie" }
