---
layout: documentation
page_title_show: true
title: "Cylon.JS Example - Hand Position"
page_title: "Example: Hand Position"
author: The Hybrid Group
description: A Cylon.JS code example
page_subtitle: "<a href='https://github.com/hybridgroup/cylon-leapmotion/tree/master/examples/hand_position' target='_blank'>View In Repo</a>"
active_menu_docs: true
---
-content_for :js_accordion do
  :javascript
    $("#example-panel").addClass("active-panel");

:markdown
  # Hand Position

  For this example, we're going to use the `hand` event the Leap Motion emits to
  get the current position of a hand in 3D space.

  To get started, let's load up Cylon:

      :::javascript
      var Cylon = require('cylon');

  With that done, let's begin defining our robot:

      :::javascript
      Cylon.robot({

  As in the basic Leap example, we have a single conncetion + device pair, talking
  to the Leap Motion over WebSockets.

      :::javascript
        connection: { name: 'leapmotion', adaptor: 'leapmotion', port: '127.0.0.1:6437' },
        device: { name: 'leapmotion', driver: 'leapmotion' },

  With our connections defined, we can get into the meat of this example. For the
  work, we're going to listen for `hand` events, and print the current palm X, Y,
  and Z coordinates to the console.

      :::javascript
        work: function(my) {
          my.leapmotion.on('hand', function(hand) {
            console.log(hand.palmPosition.join(','));
          });
        }

  With that done, we can start the robot!

      :::javascript
      }).start();

