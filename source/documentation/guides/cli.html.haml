---
title: Cylon.js CLI
author: The Hybrid Group
page_title: Guides
page_subtitle: A Guide by Humans, for Humans currently running robots.
layout: documentation
page_title_show: true
active_menu_docs: true
---
-content_for :js_accordion do
  :javascript
    $("#guides-panel").addClass("active-panel");
    $("#guides-panel ul li:nth-child(4)").addClass("active-link");

.cli
  :markdown
    # What Is It?

    Cylon works hand-in-hand with [Gort](http://gort.io), our command-line toolkit for "RobotOps", a.k.a. "DevOps for Robotics"
    You can use it to scan for hardware, connect to devices, update firmware, and more!

    Cylon also has it's own CLI tool, used to generate new modules, robots, and drivers.

    This page will be talking about the Cylon-CLI tool, but if you'd like to find out more about Gort, check out [its site](http://gort.io).

    ## How To Install

    You can install the Cylon CLI tool through NPM.
    It's preferred to install it globally, to ensure the tool is available to you everywhere:

        $ [sudo] npm install -g cylon-cli

    After installing this, you should have the `cylon` command available.

    ## Usage

    Running the command itself will provide a list of available subcommands:

        $ cylon

          Usage: cylon [command] [options]

          Commands:
            generate [module|driver|robot|tessel] [name]
                Generate new Cylon components or modules

            help
                Prints help for using the Cylon-CLI commands.

    The `generate` command can be used to create:

    - a new driver/adaptor module
    - a new driver in a module
    - a new test-driven robot
    - a new robot, set up to run on the Tessel
