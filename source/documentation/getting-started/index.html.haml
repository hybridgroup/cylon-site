---
page_title_show: true
title: Cylon.js Getting Started
author: The Hybrid Group
description: Cylon.js Getting Started
page_title: Getting Started
page_subtitle: A Guide by Humans, for Humans.
layout: documentation
active_menu_docs: true
---

-content_for :js_accordion do
  :javascript
    $("#getting-panel").addClass("active-panel");
    $("#getting-panel ul li:nth-child(1)").addClass("active-link");

.getting-started
  %section
    :markdown
      # Setup Your Environment

      ## Installing Node.js

      ### OS X

      To install Node on OS X, you can use Homebrew (`brew install node`), or download the package directly from the
      <a href="http://nodejs.org/download/" target="_blank">Node website</a>.

      ### Ubuntu

      On Ubuntu, you can install Node via apt-get (`sudo apt-get install nodejs`), or via the instructions on the
      <a href="http://nodejs.org/download/" target="_blank">Joyent wiki page</a>.

      ### Windows

      For a Windows machine, your best bet is to download a Node installer directly from the 
      <a href="http://nodejs.org/download/" target="_blank">Node website</a>.

  %section.installation
    :markdown
      ## How To Install Cylon.JS

      To get Cylon.JS up and running, you'll need the necessary modules for your hardware.
      For instance, if you're working with an Arduino, you'll most likely want the `cylon-firmata` module.

      Install it with NPM, and you'll also get the core Cylon.JS module, along with the `cylon-gpio` and `cylon-i2c` packages to make sure everything works:

          $ npm install cylon-firmata
          $ npm ls --depth 0
            ├── cylon
            ├── cylon-firmata
            ├── cylon-gpio
            └── cylon-i2c

  %section.running
    :markdown
      ## Writing And Running Cylon.JS Robots

      With the Cylon modules installed, you're ready to start writing your own code.
      You can take a look at some of the examples below, or read the guide page on
      <a href="/documentation/guides/working-with-robots/" target="_blank">Working with Robots</a>.

      Additionally, if you want to find more examples of how to write robots with Cylon.JS, check out our
      <a href="/documentation/guides/working-with-robots/" target="_blank">Examples page</a>.

      To run your robots, just pass the script to the `node` binary:

          $ node robot.js

  %section.app-code
    :markdown
      ## Cylon.JS Code Examples

      ### Hello

          :::javascript
          var Cylon = require('cylon');

          Cylon.robot({
            connection: { name: 'loopback', adaptor: 'loopback' },

            work: function() {
              every((1).second(), function() {
                console.log("Hello, human!");
              });
            }
          }).start();

      ### Arduino - LED + Button

          :::javascript

          var Cylon = require('cylon');

          Cylon.robot({
            connection: {
              name: 'arduino',
              adaptor: 'firmata',
              port: '/dev/ttyACM0'
            },

            devices: [
              { name: 'led', driver: 'led', pin: 13 },
              { name: 'button', driver: 'button', pin: 2 }
            ],

            work: function(my) {
              my.button.on('push', function() {
                my.led.toggle()
              });
            }
          }).start();

      ### Parrot ARDrone 2.0

          :::javascript
          var Cylon = require('cylon');

          Cylon.robot({
            connection: {
              name: 'ardrone',
              adaptor: 'ardrone',
              port: '192.168.1.1'
            },

            device: { name: 'drone', driver: 'ardrone' },

            work: function(my) {
              my.drone.takeoff();

              after((10).seconds(), function() {
                my.drone.land();
              }

              after((15).seconds(), function() {
                my.drone.stop();
              }
            }
          }).start();

  %section.CLI
    :markdown
      ## CLI

      To get access to a number of useful command-line tools, you should check out our helpful CLI tool,
      <a href="http://gort.io" target="_blank">Gort</a>.

          $ ./gort
          NAME:
            gort - Command Line Utility for RobotOps

          USAGE:
            gort [global options] command [command options] [arguments...]

          VERSION:
            0.2.2

          COMMANDS:
            scan   Scan for connected devices on Serial, USB, or Bluetooth ports
            bluetooth  Pair, unpair & connect to bluetooth devices.
            arduino  Install avrdude, and upload sketches to your Arduino
            spark  Upload sketches to your Spark
            digispark  Configure your Digispark microcontroller
            crazyflie  Configure your Crazyflie
            klaatu barada nikto
            help, h  Shows a list of commands or help for one command

          GLOBAL OPTIONS:
            --version, -v  print the version
            --help, -h   show help

      There's also a separate
      <a href="https://github.com/hybridgroup/cylon-cli" target="_blank">Cylon CLI</a>
      tool, used to generate new modules, robots, drivers, etc.

  %section.where-next
    :markdown
      ## Where Next?

      Where do we go from here?

      Well, if you're interested in seeing some more examples of Cylon.JS in action, check out our [Examples][] page.

      If you'd like to find out more about a specific platform, our [Platforms][] page will point you in the right direction.

      Instead, if you'd rather explore at your documentation, the sidebar should help you find what you're looking for.

      If you have any questions, please don't hesitate to get in touch with us and we'll try to help as best we can.

      [Examples]: /documentation/examples
      [Platforms]: /documentation/platforms

  %section.contributing
    :markdown
      ## Contributing

      We welcome your contributions!
      If you want to make Cylon.JS even better (even fixing typos!), check out the
      <a href="https://github.com/hybridgroup/cylon" target="_blank">GitHub page</a>!

      Have you noticed an error in our docs site?
      Think a paragraph could be worded better?
      Please send us an issue or pull request!
      The site has it's own
      <a href="https://github.com/hybridgroup/cylon-site" target="_blank">GitHub page</a> too!

      Want to suggest a feature? Report a bug? Show us something cool you made? Just say hi?
      You can also get in touch with us directly on
      <a href="https://twitter.com/CylonJS" target="_blank">Twitter</a>,
      or ping us on
      <a href="/documentation/chat/" target="_blank">IRC</a>.

  %section.footer
